---
kind: pipeline
type: docker
name: amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: rancher/dapper:v0.5.0
  commands:
  - dapper ci
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: test-image
  image: rancher/dapper:v0.5.0
  commands:
  - docker build -t kine:test-${DRONE_COMMIT} -f Dockerfile.test .
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    instance:
    - drone-pr.k3s.io

- name: test-sqlite
  image: rancher/dapper:v0.5.0
  depends_on:
   - build
   - test-image
  commands:
  - > 
    docker run -i -e ARCH -e REPO -e TAG  -e DRONE_TAG -e IMAGE_NAME
    -v /var/run/docker.sock:/var/run/docker.sock -v kine-cache:/go/src/github.com/k3s-io/kine/.cache
    --privileged kine:test-${DRONE_COMMIT} "./scripts/test sqlite"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: test-mysql
  image: rancher/dapper:v0.5.0
  depends_on:
   - build
   - test-image
  commands:
  - > 
    docker run -i -e ARCH -e REPO -e TAG  -e DRONE_TAG -e IMAGE_NAME
    -v /var/run/docker.sock:/var/run/docker.sock -v kine-cache:/go/src/github.com/k3s-io/kine/.cache
    --privileged kine:test-${DRONE_COMMIT} "./scripts/test mysql"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: test-postgres
  image: rancher/dapper:v0.5.0
  depends_on:
   - build
   - test-image
  commands:
  - > 
    docker run -i -e ARCH -e REPO -e TAG  -e DRONE_TAG -e IMAGE_NAME
    -v /var/run/docker.sock:/var/run/docker.sock -v kine-cache:/go/src/github.com/k3s-io/kine/.cache
    --privileged kine:test-${DRONE_COMMIT} "./scripts/test postgres"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: test-cockroachdb
  image: rancher/dapper:v0.5.0
  depends_on:
   - build
   - test-image
  commands:
  - > 
    docker run -i -e ARCH -e REPO -e TAG  -e DRONE_TAG -e IMAGE_NAME
    -v /var/run/docker.sock:/var/run/docker.sock -v kine-cache:/go/src/github.com/k3s-io/kine/.cache
    --privileged kine:test-${DRONE_COMMIT} "./scripts/test cockroachdb"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: test-nats
  image: rancher/dapper:v0.5.0
  depends_on:
   - build
   - test-image
  commands:
  - > 
    docker run -i -e ARCH -e REPO -e TAG  -e DRONE_TAG -e IMAGE_NAME
    -v /var/run/docker.sock:/var/run/docker.sock -v kine-cache:/go/src/github.com/k3s-io/kine/.cache
    --privileged kine:test-${DRONE_COMMIT} "./scripts/test nats"
  - >
    docker run -i -e ARCH -e REPO -e TAG  -e DRONE_TAG -e IMAGE_NAME
    -v /var/run/docker.sock:/var/run/docker.sock -v kine-cache:/go/src/github.com/k3s-io/kine/.cache
    --privileged kine:test-${DRONE_COMMIT} "./scripts/test nats-embedded"
  - >
    docker run -i -e ARCH -e REPO -e TAG  -e DRONE_TAG -e IMAGE_NAME
    -v /var/run/docker.sock:/var/run/docker.sock -v kine-cache:/go/src/github.com/k3s-io/kine/.cache
    --privileged kine:test-${DRONE_COMMIT} "./scripts/test nats-socket"
  volumes:
  - name: docker
    path: /var/run/docker.sock


- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    checksum_file: CHECKSUMsum-amd64.txt
    checksum_flatten: true
    files:
    - dist/artifacts/*
    prerelease: true
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

- name: docker-publish
  image: plugins/docker:20.13
  settings:
    build_args_from_env:
    - ARCH
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: rancher/kine
    tag: "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
    dockerfile: package/Dockerfile
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
    DOCKER_BUILDKIT: "1"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: rancher/dapper:v0.5.0
  commands:
  - dapper ci
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    checksum_file: CHECKSUMsum-arm64.txt
    checksum_flatten: true
    files:
    - dist/artifacts/*
    prerelease: true
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

- name: docker-publish
  image: plugins/docker:20.13
  settings:
    build_args_from_env:
    - ARCH
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: rancher/kine
    tag: "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
    dockerfile: package/Dockerfile
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
    DOCKER_BUILDKIT: "1"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: arm

platform:
  os: linux
  arch: arm

steps:
- name: build
  image: rancher/dapper:v0.5.0
  commands:
  - dapper ci
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: github_binary_release
  image: plugins/github-release:linux-arm
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    checksum_file: CHECKSUMsum-arm.txt
    checksum_flatten: true
    files:
    - dist/artifacts/*
    prerelease: true
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

- name: docker-publish
  image: plugins/docker:linux-arm
  settings:
    build_args_from_env:
    - ARCH
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: rancher/kine
    tag: "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
    dockerfile: package/Dockerfile
  environment:
    ARCH: "${DRONE_STAGE_ARCH}"
    # Don't enable buildkit on arm, it will barf on the platform variant mismatch
    #DOCKER_BUILDKIT: "1"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: manifest

platform:
  os: linux
  arch: amd64

steps:
- name: manifest
  image: plugins/manifest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    platforms:
    - linux/amd64
    - linux/arm64
    - linux/arm
    target: "rancher/kine:${DRONE_TAG}"
    template: "rancher/kine:${DRONE_TAG}-ARCH"
  when:
    event:
    - tag
    instance:
    - drone-publish.k3s.io
    ref:
    - refs/head/master
    - refs/tags/*

depends_on:
- amd64
- arm64
- arm

...
